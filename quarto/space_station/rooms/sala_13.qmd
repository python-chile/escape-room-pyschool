---
title: "Habitación 13:"
include-in-header:
  - file: setup.html
  - text: '<script> window.ROOM_CHALLENGE_URL = window.REPO_URL + "/sala_13.py"; </script>'
---

<center>
<img src="./img/sala_13.png" width="650">
</center>

<br/>

📁 El sistema de archivos del módulo de investigación 🧪 está desordenado. Al parecer, varios archivos
comparten un **sufijo**, pero están revueltos entre todos, lo que hace difícil su rápido análisis.

🤖🚀 Para optimizar el sistema, reagrupa los archivos considerando lo siguiente:

- Crea un **diccionarrio** dónde cada **llave** corresponda al **sufijo** en común.
- Agrupa en una **lista** todos los archivos que tengan el mismo **sufijo** y asígnalos como **valor** a su correspondiente **llave**.

<div class="alert alert-info">
Crea un `diccionario` vacío (`{}`) para entregar los archivos ordenados aplicando lo siguiente:

- Bucle `for` para recorrer el listado de `archivos`.
- Sub-texto de cada nombre de archivo (para obtener el sufijo) ocupando `sufijo = variable[-4:]`.
- Sentencia `if - else` junto a `in` para verificar si el diccionario ya contiene el par `llave` (**sufijo**) y `valor` (**lista de archivos**).
- Crear una lista o agregar un nuevo elemento a dicha lista.
</div>

::: {.callout-tip title="Pista" collapse="true"}
Para agregar un nuevo elemento a una lista dentro de un diccionario se puede hacer como lo siguiente:

```python 
lista = ["azul_A01", "verde_A02", "rojo_A01"]
primer_elemento = lista[0] # Se obtiene primer elemento de la lista "azul_A01"
sufijo = primer_elemento[-3:] # Se obtiene A01
diccionario = {'A01': []}

for elemento in lista:
    if elemento not in diccionario[sufijo]:
        diccionario[sufijo].append()
```
:::

```{pyodide-python}
archivos = ["lab_ps01", "rendimiento_ec00", "pruebas_tc12", "quimicos_ps01", "bateria_tc12", "paneles_ec00", "reporte_ec00", "reparaciones_salas_tc12", "sustancias_ps01"]

# Escribe tu respuesta aquí
respuesta = None


# Verifica la respuesta
import sala
sala.revisar(respuesta)
```