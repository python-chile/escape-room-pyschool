---
title: "Habitación 9:"
include-in-header:
  text: |
    <script type="module">
    window.GLOBAL_URL = "https://raw.githubusercontent.com/sebastiandres/pyschool_2025/refs/heads/main/quarto/rooms/sala_09.py";
    </script>
    <style>
    #quarto-sidebar, #quarto-sidebar-container { display: none !important; }
    </style>
---

Se tiene un listado objetos que se les debe hacer mantención, pero estos están mezclados con objetos que ya están en perfecto estado.

Cuidado con gastar tiempo y recursos en hacer mantención a objetos en perfecto estado. Debes crear un listado nuevo separando
los objetos que solo necesitan mantención.

<div class="alert alert-info">
Aplica los siguientes elementos para tener una `lista` de objetos para la mantención:

- Recorrer la lista `objetos`.
- Sentencia `if` para verificar si los `objetos` no están (`not in`) en lista de `reparados`.
- Agregar elementos a la lista `por reparar` si la sentencia `if` se cumple.

</div>

::: {.callout-tip title="Pista" collapse="true"}
Ten en consideración lo siguiente:

- Para recorrer una lista tiene el formato `for` objeto in lista, en este caso la _lista_ es `objetos
- Basta con una sentencia `if objeto not in reparados` para verificar que `objeto` no está dentro de lista de `reparados`
- Se debe agregar el `objeto` que cumpla la sentencia a la lista `por reparar` con la función `.append(objeto)`

:::

```{pyodide-python}
# No elimines estas líneas
import sala
objetos = ["linterna", "audífonos", "monitor principal", "motor de enfriador","monitor de repuesto", "antena", "filtro gases", "lentes infrarojo", "teclado"]
reparados= ["monitor de repuesto", "audífonos", "motor de enfriador"]
por_reparar = []

# Escribe tu respuesta aquí

# No elimines esta línea
sala.revisar(por_reparar)
```